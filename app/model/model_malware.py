"""
model_malware.py
"""
#!/usr/bin/env python
# model_view_controller.py
from collections import OrderedDict
import sys

class ModelMalware():
    """
    empty
    """

    def __init__(self, db):
        self._db = db

    def create_malware_collection(self):
        """
        add atribute in malware collection
        Params:
        - db
        Returns:
        - none
        """
        self._db.malware_collection.drop()
        self._db.create_collection("malware_collection")

        vexpr = {
            "$jsonSchema": {
                "bsonType": "object",
                "uniqueItems": True,
                "required": ["id_malware"],
                "properties": {
                    "id_malware": {
                        "bsonType": "string",
                    },
                    "source_malware": {
                        "bsonType": "string",
                    },
                    "date_added_malware": {
                        "bsonType": "string",
                    },
                    "url_malware": {
                        "bsonType": "string",
                    },
                    "url_status_malware": {
                        "bsonType": "bool",
                    },
                    "threat_malware": {
                        "bsonType": "string",
                    },
                    "tags_malware": {
                        "bsonType": "string",
                    },
                    "url_haus_malware":{
                        "bsonType": "string",
                    },
                    "reporter_malware": {
                        "bsonType": "string",
                    },
                    "md5_malware": {
                        "bsonType": "string",
                    },
                    "sha256_malware": {
                        "bsonType": "string",
                    },
                    "sha1_malware": {
                        "bsonType": "string",
                    },
                    "ssdeep_malware": {
                        "bsonType": "string",
                    },
                    "is_exe_malware": {
                        "bsonType": "bool",
                    },
                    "imphash_malware": {
                        "bsonType": "string",
                    },
                    "vt_report_malware": {
                        "bsonType": "bool"
                    }
                }
            }
        }

        cmd = OrderedDict([('collMod', 'malware_collection'),
                           ('validator', vexpr),
                           ('validationLevel', 'moderate')])

        self._db.command(cmd)

        self._db.malware_collection.create_index("id_malware")

    def get_malware_collection(self):
        """
        empty
        """
        return self._db["malware_collection"]

    def add_malware_collection(self, id_malware, source_malware, date_added, url_malware, url_status, threat, tags, urlhaus_link, reporter):
        """
        empty
        """
        try:
            query = {"id_malware":id_malware,
                     "source_malware":source_malware,
                     "date_added_malware":date_added,
                     "url_malware":url_malware,
                     "url_status_malware":url_status,
                     "threat_malware": threat,
                     "tags_malware": tags,
                     "url_haus_malware":urlhaus_link,
                     "reporter_malware":reporter,
                     "md5_malware":"null",
                     "sha256_malware":"null",
                     "sha1_malware":"null",
                     "ssdeep_malware":"null",
                     "is_exe_malware":False,
                     "imphash_malware":"null",
                     "vt_report_malware":False,
                     }
            self._db.malware_collection.insert_one(query)
            return True
        except:
            print("exc:", sys.exc_info())


    def select_one_malware_collection(self, id_malware):
        """
        empty
        """
        return self._db.malware_collection.find_one({"id_malware": id_malware})

    def select_all_malware_collection(self):
        """
        empty
        """
        return self._db.malware_collection.find()

    def delete_one_malware_collection(self, id_malware):
        """
        empty
        """
        self._db.malware_collection.deleteOne({"id_malware": id_malware})

    def update_malware_imphash(self, id_malware, imphash):
        """
        empty
        """
        self._db.malware_collection.update_one({"id_malware" : id_malware},
                                           {"$set": {"imphash_malware" : imphash}})

    def update_malware_vt(self, id_malware):
        """
        empty
        """
        self._db.malware_collection.update_one({"id_malware" : id_malware},
                                           {"$set" : {"vt_report_malware":True}})

    def update_malware_md5_sha256_sha1_ssdeep(self, id_malware, md5, sha256, sha1, ssdeep):
        """
        empty
        """
        self._db.malware_collection.update_one({"id_malware" : id_malware},
                                           {"$set" : {"md5_malware": md5,
                                                      "sha256_malware": sha256,
                                                      "sha1_malware": sha1,
                                                      "ssdeep_malware": ssdeep}})

    def update_malware_urlstatus(self, id_malware, urlstatus):
        self._db.malware_collection.update({ "id_malware" : id_malware},
                                           {"$set" : {"url_status": urlstatus }})
